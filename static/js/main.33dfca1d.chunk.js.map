{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.jsx","components/charList/CharList.jsx","components/skeleton/Skeleton.js","components/charInfo/CharInfo.jsx","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCHarLoading","onError","updateChar","Math","floor","random","then","length","catch","this","spinner","errorMessage","content","onClick","mjolnir","alt","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","itemRefs","setRef","ref","push","onActive","forEach","item","classList","remove","add","focus","arr","i","tabIndex","props","onCharSelected","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","err","info","console","log","skeleton","hompage","ErrorBoundray","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33dfca1d.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService {\r\n  _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  _apiKey = 'apikey=face7fefa784b8a1f3665af5608ad511';\r\n  _baseOffset = 210;\r\n\r\n  getResource = async (url) => {\r\n    let res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n  }\r\n\r\n  getAllCharacters = async (offset = this._baseOffset) => {\r\n    const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n    return res.data.results.map(this._transformCharacter);\r\n  }\r\n\r\n  getCharacter = async (id) => {\r\n    const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n    return this._transformCharacter(res.data.results[0]);\r\n  }\r\n\r\n  _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items\r\n    }\r\n  }\r\n}\r\n\r\nexport default MarvelService;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx = \"0\"\r\n            cy = \"0\"\r\n            r = \"7\"\r\n            fill = \"#9F0013\"\r\n            fillOpacity = \"1\" >\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx = \"0\"\r\n            cy = \"0\"\r\n            r = \"7\"\r\n            fill = \"#9f0013db\"\r\n            fillOpacity = \"0.875\" >\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx = \"0\"\r\n            cy = \"0\"\r\n            r = \"7\"\r\n            fill = \"#9f0013ad\"\r\n            fillOpacity = \"0.75\" >\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx = \"0\"\r\n            cy = \"0\"\r\n            r = \"7\"\r\n            fill = \"#9f001370\" //#232222\r\n            fillOpacity = \"0.625\" >\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx = \"0\"\r\n            cy = \"0\"\r\n            r = \"7\"\r\n            fill = \"232222\" //\r\n            fillOpacity = \"0.5\" >\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx = \"0\"\r\n            cy = \"0\"\r\n            r = \"7\"\r\n            fill = \"#232222c9\"\r\n            fillOpacity = \"0.375\" >\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx = \"0\"\r\n            cy = \"0\"\r\n            r = \"7\"\r\n            fill = \"#232222c9\"\r\n            fillOpacity = \"0.25\" >\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx = \"0\"\r\n            cy = \"0\"\r\n            r = \"7\"\r\n            fill = \"#232222a8\"\r\n            fillOpacity = \"0.125\" >\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} />\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport MarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n\n  state = {\n    char: {},\n    loading: true,\n    error: false\n  }\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  marvelService = new MarvelService();\n\n  onCharLoaded = (char) => {\n    this.setState({char, loading: false, error: false})\n  }\n\n  onCHarLoading = () => {\n    this.setState({\n      loading: true\n    })\n  }\n\n  onError = () => {\n    this.setState({error: true, loading: false})\n  }\n\n  updateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    this.onCHarLoading();\n\n    this.marvelService\n      .getCharacter(id)\n      .then(res => {\n        \n        res.description = res.description.length > 225 ? `${res.description.slice(0, 222)}...` : res.description\n\n        res.description = res.description.length < 1 ? 'No description' : res.description\n\n        res.name = (res.name.length > 22) ? `${res.name.slice(0, 21)}...` : res.name\n\n        this.onCharLoaded(res);\n      })\n      .catch(this.onError);\n  }\n\n  render() {\n    const {char, loading, error} = this.state;\n\n    const spinner = loading ? <Spinner/> : null;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const content = !(loading || error) ? <View char={char}/> : null;\n\n\n    return (\n      <div className=\"randomchar\">\n\n        {spinner}\n        {errorMessage}\n        {content}\n        \n        <div className=\"randomchar__static\">\n          <p className=\"randomchar__title\">\n            Random character for today!<br />\n            Do you want to get to know him better?\n          </p>\n          <p className=\"randomchar__title\">\n            Or choose another one\n          </p>\n          <button className=\"button button__main\">\n            <div className=\"inner\" onClick={this.updateChar}>try it</div>\n          </button>\n          <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst View = ({char}) => {\n\n  const {name, description, thumbnail, homepage, wiki} = char;\n\n  let imgStyle = { 'objectPosition': 'center' };\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = { 'objectPosition': 'left' };\n  }\n\n  return (\n    <div className=\"randomchar__block\">\n      <img src={thumbnail} style={imgStyle} alt=\"Random character\" className=\"randomchar__img\" />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">\n          {description}\n        </p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RandomChar;\n\n","import React, { Component } from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport './charList.scss';\r\n\r\nclass CharList extends Component {\r\n\r\n  state = {\r\n    charList: [],\r\n    loading: true,\r\n    error: false,\r\n    newItemLoading: false,\r\n    offset: 210,\r\n    charEnded: false\r\n  }\r\n\r\n  marvelService = new MarvelService();\r\n\r\n  componentDidMount() {\r\n    this.onRequest();\r\n  }\r\n\r\n  onRequest = (offset) => {\r\n    this.onCharListLoading();\r\n    this.marvelService.getAllCharacters(offset)\r\n      .then(this.onCharListLoaded)\r\n      .catch(this.onError)\r\n  }\r\n\r\n  onCharListLoading = () => {\r\n    this.setState({\r\n      newItemLoading: true\r\n    })\r\n  }\r\n\r\n  onCharListLoaded = (newCharList) => {\r\n    let ended = false;\r\n    if (newCharList.length < 9) {\r\n      ended = true;\r\n    }\r\n\r\n    this.setState(({ offset, charList }) => ({\r\n      charList: [...charList, ...newCharList],\r\n      loading: false,\r\n      newItemLoading: false,\r\n      offset: offset + 9,\r\n      charEnded: ended\r\n    }))\r\n  }\r\n\r\n  onError = () => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  itemRefs = [];\r\n\r\n  setRef = (ref) => {\r\n    this.itemRefs.push(ref);\r\n  }\r\n\r\n  onActive = (id) => {\r\n    this.itemRefs.forEach(item => item.classList.remove('char__item_selected'))\r\n    this.itemRefs[id].classList.add('char__item_selected');\r\n    this.itemRefs[id].focus();\r\n  }\r\n\r\n\r\n  renderItems(arr) {\r\n    const items = arr.map((item, i) => {\r\n      let imgStyle = { 'objectPosition': 'center' };\r\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = { 'objectPosition': 'left' };\r\n      }\r\n\r\n      return (\r\n        <li\r\n          ref={this.setRef}\r\n          tabIndex={0}\r\n          key={item.id}\r\n          className=\"char__item\"\r\n          onClick={() => {\r\n            this.props.onCharSelected(item.id);\r\n            this.onActive(i);\r\n          }}>\r\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n          <div className=\"char__name\">{item.name}</div>\r\n        </li>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <ul className=\"char__grid\">\r\n        {items}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  render() {\r\n\r\n    const { charList, loading, error, offset, newItemLoading, charEnded } = this.state;\r\n\r\n    const items = this.renderItems(charList);\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(loading || error) ? items : null;\r\n\r\n    return (\r\n      <div className=\"char__list\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n        <button\r\n          className=\"button button__main button__long\"\r\n          disabled={newItemLoading}\r\n          style={{ 'display': charEnded ? 'none' : 'block' }}\r\n          onClick={() => this.onRequest(offset)}>\r\n          <div className=\"inner\">load more</div>\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\nimport MarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n\n  state = {\n    char: null,\n    loading: false,\n    error: false\n  }\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  componentDidCatch(err, info) {\n    console.log(err, info);\n    this.setState({error: true});\n  }\n\n  updateChar = () => {\n    const {charId} = this.props;\n    if(!charId) {\n      return;\n    }\n\n    this.onCHarLoading();\n\n    this.marvelService\n      .getCharacter(charId)\n      .then(this.onCharLoaded)\n      .catch(this.onError)\n  }\n\n  onCharLoaded = (char) => {\n    this.setState({ char, loading: false, error: false })\n  }\n\n  onCHarLoading = () => {\n    this.setState({\n      loading: true\n    })\n  }\n\n  onError = () => {\n    this.setState({ error: true, loading: false })\n  }\n\n  render() {\n    const {char, loading, error} = this.state;\n\n    const skeleton = char || loading || error ? null : <Skeleton/> \n    const spinner = loading ? <Spinner /> : null;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null; \n        \n\n    return (\n      <div className=\"char__info\">\n        {skeleton}\n        {spinner}\n        {errorMessage}\n        {content}\n      </div>\n    )\n  }\n}\n\nconst View = ({char}) => {\n  const {name, description, thumbnail, hompage, wiki, comics} = char;\n\n  let imgStyle = { 'objectPosition': 'center' };\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = { 'objectPosition': 'left' };\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt=\"abyss\" style={imgStyle}/>\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={hompage} className=\"button button__main\">\n              <div className=\"inner\">hompage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">\n          {description}\n      </div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : 'This character has no comics'}\n        {\n          comics.map((item, i) => {\n            if(i >= 10) return;\n\n            return (\n              <li className=\"char__comics-item\" key={i}>\n                {item.name}\n              </li>\n            )\n          })\n        }\n      </ul>\n    </>\n  )\n}\n\nexport default CharInfo;","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundray extends Component {\r\n  state = {\r\n    error: false\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({error: true});\r\n  }\r\n\r\n  render() {\r\n    if(this.state.error) {\r\n      return (\r\n        <ErrorMessage/>\r\n      )\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundray;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundray from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n\n  state = {\n    selectedChar: null\n  }\n\n  onCharSelected = (id) => {\n    this.setState({selectedChar: id})\n  };\n\n\n  render() {\n    return (\n      <div className=\"app\">\n            <AppHeader/>\n            <main>\n              <ErrorBoundray> \n                <RandomChar/>\n              </ErrorBoundray>\n                <div className=\"char__content\">\n                  <ErrorBoundray>\n                    <CharList onCharSelected={this.onCharSelected}/>\n                  </ErrorBoundray>\n                  \n                    <ErrorBoundray>\n                      <CharInfo charId={this.state.selectedChar}/>\n                    </ErrorBoundray>\n                </div>\n                <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n            </main>\n        </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport MarvelService from './services/MarvelService';\r\nimport './style/style.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}